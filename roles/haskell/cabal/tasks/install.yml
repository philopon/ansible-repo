---
- name: install zlib
  sudo: True
  apt: pkg=zlib1g-dev update_cache=no 

- name: get cabal-install latest version
  register: cabal_version
  changed_when: False
  script: ../../hackage_latest.py cabal-install

- name: fetch cabal-install source
  get_url: url={{hackage_url}}/package/cabal-install-{{cabal_version.stdout_lines[0]}}/cabal-install-{{cabal_version.stdout_lines[0]}}.tar.gz
           dest=/tmp/cabal-install.tar.gz validate_certs=no

- name: get cabal-install output directory
  register: source
  script: ../../tar_output.sh /tmp/cabal-install.tar.gz

- name: unarchive cabal-install
  command: tar xf cabal-install.tar.gz chdir=/tmp creates={{source.stdout_lines[0]}}

- name: create temporary package db directory
  file: path=/tmp/{{source.stdout_lines[0]}}/package.conf.d state=directory

- name: create package cache
  command: |
    ghc-pkg recache --package-db=/tmp/{{source.stdout_lines[0]}}/package.conf.d 
    creates=/tmp/{{source.stdout_lines[0]}}/package.conf.d/package.cache

- name: compile Setup.hs
  command: |
    ghc Setup.hs chdir=/tmp/{{source.stdout_lines[0]}} creates=Setup

- name: create bootstrap1.sh
  shell: |
    grep -v '^install_pkg "cabal-install"' bootstrap.sh > bootstrap1.sh
    chmod +x bootstrap1.sh 
    chdir=/tmp/{{source.stdout_lines[0]}} creates=bootstrap1.sh

- name: check dependencies
  register: dependencies
  ignore_errors: True
  command: |
    ./Setup configure --user --package-db=package.conf.d chdir=/tmp/{{source.stdout_lines[0]}}

- name: install cabal-install only-dependencies
  command: ./bootstrap1.sh chdir=/tmp/{{source.stdout_lines[0]}}
  environment:
    EXTRA_CONFIGURE_OPTS: --package-db=/tmp/{{source.stdout_lines[0]}}/package.conf.d 
  when: dependencies|failed

- name: install cabal-install
  shell: |
    ./Setup configure --user --package-db=package.conf.d --prefix={{cabal_prefix}}
    ./Setup build
    sudo ./Setup install
    chdir=/tmp/{{source.stdout_lines[0]}}
    creates={{cabal_prefix}}/bin/cabal

- name: cabal directory
  file: path=~/.cabal state=directory

- name: cabal config file
  template: src=../templates/cabal.j2 dest=~/.cabal/config

- command: cabal update

- name: cleanup cabal
  sudo: True
  file: path={{item}} state=absent 
  with_items:
    - "/tmp/{{source.stdout_lines[0]}}"
    - "/tmp/cabal-install.tar.gz"
